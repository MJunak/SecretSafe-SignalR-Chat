@model IEnumerable<SecretSafe.Models.ChooseRoomsViewModel>
@{
    ViewBag.Title = "Rooms";
}

<h2>Choose room</h2>
@foreach (var securityLevel in Model.GroupBy(m => m.SecurityLevel))
{
    var securityLevelTitle = securityLevel.FirstOrDefault().SecurityLevel;
    var securityLevelClass = GetClassSecurityLevel(securityLevelTitle);
    <div class="panel panel-@securityLevelClass panel-box">
        <div class="panel-heading">
            <h3 class="panel-title">@securityLevelTitle</h3>
        </div>
        <div class="panel-body" id="@securityLevelTitle.Replace(" ", "")-box">
            @foreach (var room in Model.Where(m => m.SecurityLevel == securityLevelTitle))
            {
                @Html.Partial("RoomsPartials/RoomPanelPartial", new SecretSafe.Models.RoomPanelPartialViewModel
           {
               SecurityLevelClass = securityLevelClass,
               RoomId = room.Id,
               ChatRoomName = room.ChatRoomName,
               CreatedOn = room.CreatedOn
           })
            }
            <div class="col-md-3 ">
                <div class="panel panel-@securityLevelClass">
                    <div class="panel-heading">
                        <h3 class="panel-title">Create new secure room</h3>
                    </div>
                    <div class="panel-body" id="@securityLevelTitle.Replace(" ", "")">
                        @*<button class="btn btn-lg btn-@securityLevelClass" style="width: 100%" data-toggle="modal" data-target="#modalAddRoom">
                                <span class="glyphicon glyphicon-plus"></span>
                            </button>*@

                        @Ajax.ActionLink(" ", "CreateRoomAjax", "Home", new { SecurityLevel = securityLevelTitle },
                           new AjaxOptions
                           {
                               OnBegin = "RoomIsCreated",
                               InsertionMode = InsertionMode.Replace,
                               UpdateTargetId = @securityLevelTitle.Replace(" ", "")

                           },
                           new { @class = "glyphicon glyphicon-plus btn btn-lg btn-" + securityLevelClass, style = "width: 100%" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <button class="btn btn-@securityLevelClass btnJoinRoom">
                Join room
            </button>
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="modalAddRoom" tabindex="-1" role="dialog" aria-labelledby="modalAddRoomLabel">
    <div class="modal-dialog" role="document">
        <divsecurityLevelTitle class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="modalAddRoomLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </divsecurityLevelTitle>
    </div>
</div>

@functions{
    public string GetClassSecurityLevel(string securityLevelTitle)
    {
        switch (securityLevelTitle)
        {
            case "Normal Security": return "info";
            case "Medium Security": return "success";
            case "Pro Security": return "warning";
            case "Maximum Security": return "danger";
            default: return "";
        }
    }
}
@section scripts{
    
<script src="https://cdn.rawgit.com/zenorocha/clipboard.js/v1.5.12/dist/clipboard.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".btnJoinRoom").attr("disabled", "disabled");
        });

        function RoomIsCreated(response, event) {
            console.log($(this).parent().parent().parent());
            $(this).parent().parent().parent().removeClass();
            $(this).parent().parent().parent().addClass("col-md-4");
        };

        function DeleteRoom(response) {

            var room = $(".panel").find("[data-guid='" + response.id + "']").parent();
            console.log(room);
            $(room).hide(300);
        };

        function ClientClick(elem) {
            console.log(elem);
            $(".btnJoinRoom").attr("disabled", "disabled");
            $(".rooms").removeClass("actives-pannel");
            $(elem).addClass('actives-pannel');

            var parentPanel = $(elem).parent().parent().parent();
            var btnJoinRoom = $(parentPanel).find(".btn");
            var roomId = $(elem).attr("data-guid");
            $(btnJoinRoom).removeAttr('disabled');

        };

        $(".btnJoinRoom").on("mousedown",function () {
            if ($(this).is(":disabled")) {
                alert("Choose room first!")
            } else {
             
                window.open("../" + GenerateLinkForRoom(), GenerateLinkForRoom(), '');
                return false;
            }
        });


         function CopyLink() {
            var url = GenerateLinkForRoom();
            console.log(url);
            copyToClipboard(url)
        };

        function copyToClipboard(text) {
            window.prompt("Copy URL to clipboard: Ctrl+C, Enter", text);
        }

        function GenerateLinkForRoom() {
                var roomId = $(".actives-pannel").attr("data-guid");
                var security = $(".actives-pannel").parents(".panel-box").find(".panel-title").first().text();
                console.log(security);
                var link =  security.replace(" ", "") + "/" + roomId;
                return link;
        }
    </script>
}